
%%% Preamble Requirements %%%
% \usepackage{geometry}
% \usepackage{amsfonts}
% \usepackage{amsmath}
% \usepackage{amssymb}
% \usepackage{tikz}

% Optional packages such as sfmath set through python interface
% \usepackage{sfmath}

% \usetikzlibrary{arrows,chains,positioning,scopes,shapes.geometric,shapes.misc,shadows}

%%% End Preamble Requirements %%%

\input{"/home/jexalto99/.local/lib/python3.8/site-packages/pyxdsm/diagram_styles"}
\begin{tikzpicture}

\matrix[MatrixSetup]{
%Row 0
\node [Optimization] (opt) {$\text{Optimizer (SNOPT)}$};&
\node [DataInter] (opt-helix) {$\begin{array}{c}B, R, \mathbf{\theta} \\ C_{L,\alpha}, J, c_{prop}\end{array}$};&
&
\node [DataInter] (opt-OAS) {$b, \mathbf{\phi}, \vec{c}_{wing}$};&
&
&
\\
%Row 1
&
\node [Function] (helix) {$\text{HELIX}$};&
\node [DataInter] (helix-slipstream) {$\mathbf{v_j}$};&
&
\node [DataInter] (helix-F) {$P_{in}$};&
\node [DataInter] (helix-G) {$T$};&
\\
%Row 2
&
&
\node [Function] (slipstream) {$\text{Slipstream model}$};&
\node [DataInter] (slipstream-OAS) {$\mathbf{G},\;\mathbf{V}$};&
&
&
\\
%Row 3
&
&
&
\node [Function] (OAS) {$\text{EnhancedOpenAeroStruct}$};&
&
\node [DataInter] (OAS-G) {$C_D$};&
\node [DataInter] (OAS-G2) {$C_L, W_{str}$};\\
%Row 4
\node [DataInter] (F-opt) {$f$};&
&
&
&
\node [ImplicitFunction] (F) {$\text{Objective function}$};&
&
\\
%Row 5
\node [DataInter] (G-opt) {$g_1$};&
&
&
&
&
\node [ImplicitFunction] (G) {$\begin{array}{c}\text{Thrust} \\ \text{constraint}\end{array}$};&
\\
%Row 6
\node [DataInter] (G2-opt) {$g_2$};&
&
&
&
&
&
\node [ImplicitFunction] (G2) {$\begin{array}{c}\text{Lift} \\ \text{constraint}\end{array}$};\\
};

% XDSM process chains
{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (helix);
\chainin (F) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (helix);
\chainin (slipstream) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (helix);
\chainin (G) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (slipstream);
\chainin (OAS) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (OAS);
\chainin (G) [join=by ProcessHVA];
\chainin (opt) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (OAS);
\chainin (G2) [join=by ProcessHVA];
\end{pgfonlayer}
}{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (G2);
\chainin (opt) [join=by ProcessHVA];
\end{pgfonlayer}
}

\begin{pgfonlayer}{data}
\path
% Horizontal edges
(opt) edge [DataLine] (opt-helix)
(opt) edge [DataLine] (opt-OAS)
(helix) edge [DataLine] (helix-slipstream)
(slipstream) edge [DataLine] (slipstream-OAS)
(helix) edge [DataLine] (helix-F)
(helix) edge [DataLine] (helix-G)
(OAS) edge [DataLine] (OAS-G)
(OAS) edge [DataLine] (OAS-G2)
(F) edge [DataLine] (F-opt)
(G) edge [DataLine] (G-opt)
(G2) edge [DataLine] (G2-opt)
% Vertical edges
(opt-helix) edge [DataLine] (helix)
(opt-OAS) edge [DataLine] (OAS)
(helix-slipstream) edge [DataLine] (slipstream)
(slipstream-OAS) edge [DataLine] (OAS)
(helix-F) edge [DataLine] (F)
(helix-G) edge [DataLine] (G)
(OAS-G) edge [DataLine] (G)
(OAS-G2) edge [DataLine] (G2)
(F-opt) edge [DataLine] (opt)
(G-opt) edge [DataLine] (opt)
(G2-opt) edge [DataLine] (opt);
\end{pgfonlayer}

\end{tikzpicture}
